library(sp)
library(sf)
library(tmap)
library(dismo)
library(raster)
library(GISTools)
library(rgdal)
library(maptools)
library(rgeos)
library(rgl)
library(rasterVis)
library(viridis)
library(units)
?dismo
vignette(package = "dismo")
vignette("sdm")
??SpatialPolygons
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
knitr::opts_knit$set(root.dir = "E:/PopDynIZW Dropbox/Teaching/_TU_BiodivDynamics2020/DataBorneo")
# adjust the working directory [wd]
stem_wd <- 'E:/PopDynIZW Dropbox/Teaching/_TU_BiodivDynamics2020'
work_wd <- paste(stem_wd, "/", "DataBorneo", sep = "")
setwd(work_wd)
maps_wd <- paste(work_wd, "/", "BaseMaps", sep = '')
recs_wd <- paste(work_wd, "/", "BaseRecords", sep = '')
maxent_wd <- paste(work_wd, "/", "BaseModels", sep = '')
output_wd <- paste(stem_wd, "/", "output", sep = '')
getwd()
stem_wd <- 'E:/PopDynIZW Dropbox/Teaching/_TU_BiodivDynamics2020'
work_wd <- paste(stem_wd, "/", "DataBorneo", sep = "")
setwd(work_wd)
getwd()
maps_wd <- paste(work_wd, "/", "BaseMaps", sep = '')
recs_wd <- paste(work_wd, "/", "BaseRecords", sep = '')
maxent_wd <- paste(work_wd, "/", "BaseModels", sep = '')
output_wd <- paste(stem_wd, "/", "output", sep = '')
setwd(dir = maps_wd)
filenames <- list.files()
head(x = filenames)
filenames
head(x = filenames)
str(filenames)
paste(maps_wd, '/bio_asc_01.asc', sep = '')
ras1 <- raster(x = paste(maps_wd, '/bio_asc_01.asc', sep = ''))
ras1
ras1@crs <- CRS("+init=epsg:4326")
ras1
ras1@crs
ras24 <- raster(x = paste(maps_wd, '/bio_asc_24.asc', sep = '')) #DEM
ras24
ras24@crs <- ras1@crs # same as: CRS("+proj=longlat +datum=WGS84")
ras24
plot(x = ras1)
tmap_mode(mode = "plot")
tm_shape(shp = ras1) + tm_raster()
tmap_mode(mode = "view")
tm_shape(shp = ras1) + tm_raster()
ras1
ras1@extent
extent(ras1)
ras1_cr <- crop(x = ras1, y = clip_extent)
plot(ras1_cr, col= inferno(10))
clip_extent <- extent(117.2, 117.45, 5.4, 5.5)
ras1_cr <- crop(x = ras1, y = clip_extent)
plot(ras1_cr, col= inferno(10))
plot(ras1_cr, col= viridis(10))
?extent
ras1_cr # str(ras1_cr) # attributes(ras1_cr)
bbox(obj = ras1_cr)
class(bbox)
a <- bbox(obj = ras1_cr)
a
class(a)
ras1_cr@extent@xmin
ras1_cr@data@values  # values(ras1_cr)
ras1_cr@data
class(ras1_cr@data@values)
nrow(x = ras1_cr) # ncol(ras1_cr) # ncell(ras1_cr)
ncol(ras1_cr)
head(x = coordinates(obj = ras1_cr), n = 10)
plot(x = ras1, col=viridis(256))
image(x = ras1)
image(x = ras1,col=viridis(256))
plot(ras24)
slope <- terrain(x = ras24, opt = "slope",
unit = "radians", neighbors = 8)
aspect <- terrain(x = ras24, opt = "aspect",
unit = "radians", neighbors = 8)
Bor_hs <- hillShade(slope, aspect, angle = 45,
direction = 270)
plot(Bor_hs, col=grey(0:100/100), legend=FALSE)
plot(Bor_hs, col=grey(0:100/100), legend=FALSE)
plot(ras24, col=terrain.colors(25,alpha=0.3),add=T)
points(coordinates(ras1_cr),cex=0.1,pch='+')
plot(extent(ras1_cr),add=T, col='red')
persp(x = ras24, xlab = "Easting", ylab = "Northing",
zlab = "elevation", r = 5, d = 1.5, expand = 0.1,
ticktype = "detailed")
proj_moll=CRS("+proj=moll +lat_0=65 +lon_0=10") # Mollweide
Bor_dem_moll <-projectRaster(ras1_cr,crs=proj_moll)
persp(Bor_dem_moll, xlab="Easting", ylab="Northing",
zlab="elevation", main="Elevation model of Borneo",
r=1, d=5.5, expand=0.1, ticktype="detailed")
files.full <- list.files(path = maps_wd, pattern = '.asc$',
full.names = TRUE )
files.full
files.full[1:2]
files.rel <- list.files(path = maps_wd, pattern = '.asc$',
full.names = FALSE )
files.rel[1:2]
predictors <- stack(x = files.full[c(9, 12, 22, 24)])
predictors
projection(x = predictors) <- CRS(projargs = "+proj=longlat +datum=WGS84")
predictors@layers # this is a list! Address single layers with [[ ]]
plot(predictors[[1]])
round(x = cellStats(x = predictors, stat = 'mean'), digits = 2)
plot(x = predictors)
tmap_mode(mode = "view")
tm_shape(shp = predictors) + tm_raster()
bwplot(x = predictors[[c(1, 2)]]) # bwplot(predictors)
vignette(topic = 'Raster')
vignette(package='raster')
vignette(package='Raster')
vignette(topic = 'Raster')
new_ras <- ras1 + ras24 + 100
plot(x = new_ras, col = rev(rainbow(5)))
range(values(ras1), na.rm = TRUE)
mean.t.c <- ras1 / 10
range(values(mean.t.c), na.rm = TRUE)
mean.t.c.25 <- mean.t.c >= 25
plot(x = mean.t.c.25)
cells <- cellFromRowCol(object = ras1_cr, row = 5, col = 1:3)
cells    #gives cell ID number!!!
plot(ras1_cr)
extract(x = ras1_cr, y = cells) # gives cell values!
coordinates(obj = ras1_cr)[cells,]
points(x = coordinates(obj = ras1_cr)[cells,], col = 'blue')
points(x = coordinates(obj = ras1_cr)[cells,], col = 'blue',pch=3)
?aggregate
agg_ras1 <- aggregate(x=ras1,by=10,FUN=mean)
plot(agg_ras1)
rasagg_ras1 <- raster::aggregate(x=ras1,by=10,FUN=mean)
agg_ras1 <- raster::aggregate(x=ras1,by=10,FUN=mean)
plot(agg_ras1)
plot(x = ras1_cr)
points(x = coordinates(obj = ras1_cr)[cells,], col = 'blue',pch=3)
pred_dat <-   extract(predictors, cells)
pred_dat
test <- data.frame(cells,pred_dat)
test
predictors <- stack(x = files.full[c(9, 12, 22, 24)])
projection(x = predictors) <- CRS(projargs = "+proj=longlat +datum=WGS84")
pred_dat <-   extract(predictors, cells)
pred_dat
test <- data.frame(cells,pred_dat)
test
coordinates(obj = ras1_cr)[cells,]
pred_dat <-   extract(predictors, coordinates(obj = ras1_cr)[cells,])
pred_dat
test <- data.frame(cells,pred_dat)
test
agg_ras1 <- raster::aggregate(x=ras1,fact=10,FUN=mean)
plot(agg_ras1)
agg_ras1 <- raster::aggregate(x=ras1,fact=20,FUN=mean)
plot(agg_ras1)
predictors <- stack(x = files.full[c(9, 12, 22, 24)])
agg_stack <- aggregate(x=predictors,fact=20,FUN=mean)
plot(agg_stack)
dim(files.full[c(9, 12, 22, 24)])
length(files.full[c(9, 12, 22, 24)])
agg_ras1 <- aggregate(x=ras1,fact=100,FUN=mean)
plot(agg_ras1)
files.full
length(files.full[c(3:6)])
i <- 1
files.full[i]
files.full[i+2]
agg_ras <- aggregate(x=files.full[i+2],fact=10,FUN=mean)
agg_ras <- raster::aggregate(x=files.full[i+2],fact=10,FUN=mean)
agg_ras1 <- aggregate(x=ras1,fact=10,FUN=mean)
plot(agg_ras1)
files.full[i+2]
agg_ras <- raster::aggregate(x=raster(files.full[i+2]),fact=10,FUN=mean)
setwd(output_wd)
for (i in 1: no_to_agg)
{
agg_ras <- aggregate(x=raster(files.full[i+2]),fact=10,FUN=mean)
my_filename <- paste('agg_ras_',i,'.asc', sep='')
writeRaster(  agg_ras,
filename=my_filename,format="ascii",
overwrite=TRUE,NAflag = -9999)
}
setwd(maps_wd)
no_to_agg <- length(files.full[c(3:6)])
setwd(output_wd)
for (i in 1: no_to_agg)
{
agg_ras <- aggregate(x=raster(files.full[i+2]),fact=10,FUN=mean)
my_filename <- paste('agg_ras_',i,'.asc', sep='')
writeRaster(  agg_ras,
filename=my_filename,format="ascii",
overwrite=TRUE,NAflag = -9999)
}
setwd(maps_wd)
plot(agg_ras1)
Borneo_shp <- st_read(dsn = maps_wd,
layer = "borneo_admin",
stringsAsFactors = FALSE)[, c(1:3, 5, 7, 17, 18)]
Borneo_shp
maps_wd
Admin_shp <- readOGR(dsn=maps_wd, layer="borneo_admin",
stringsAsFactors=FALSE)[,c(1:3,5,7,17,18)]
maps_wd
PA_shp <-  st_read(dsn = maps_wd,
layer = "Bor_PA",
stringsAsFactors = FALSE)[, c(1:4)]
River_shp <- st_read(dsn = maps_wd,
layer = "sn_100000",
stringsAsFactors = FALSE)
PA_shp
River_shp
Admin_shp <- readOGR(dsn=maps_wd, layer="borneo_admin",
stringsAsFactors=FALSE)[,c(1:3,5,7,17,18)]
Admin_shp
Admin_sf <- as(Admin_shp, "sf") ## from sp object to sf object
Admin_sf
Admin_sp <- as(Admin_sf, "Spatial") ## from sf to sp object
Admin_sp
str(object = extent(PA_shp))
extent(PA_shp)@xmin
extent(PA_shp)@xmin
names(x = PA_shp)
summary(object = PA_shp)
str(object = PA_shp)
PA_shp
attributes(x = PA_shp)
PA_shp$SITE_ID
head(x = PA_shp)
tail(x = PA_shp)
tail(x = PA_shp, ... = 2)
tail(x = PA_shp, 2)
tail(x = PA_shp, 15)
PA_shp[1, ]
PA_shp[1:2, ]
PA_shp[, 1]
PA_shp$NAME_ENG
head(x = PA_shp$NAME_ENG)
head(x = PA_shp$NAME_ENG)
head(x = PA_shp$NAME_ENG, 15)
head(x = PA_shp$NAME_ENG, c(15, 25))
PA_shp[1, 1]
PA_shp[2, 3]
which(x = PA_shp$COUNTRY == 'Malaysia')
tmap_mode(mode = "plot")
tm_shape(shp = PA_shp[, 1]) + tm_polygons(col = "SITE_ID",
palette = grDevices::terrain.colors(5),
style = "quantile" # color schema divided by quantiles
)
tmap_mode(mode = "plot")
tm_shape(shp = PA_shp[, 1]) + tm_polygons()
tmap_mode(mode = "plot")
tm_shape(shp = PA_shp[, 1:2]) + tm_polygons()
st_is_valid(PA_shp)
st_is_valid(st_buffer(PA_shp, 0))
tmap_mode(mode = "plot")
tm_shape(shp = Borneo_shp) + tm_polygons(border.col = "deepskyblue4") +
tm_shape(PA_shp[,1]) + tm_polygons(border.col = "black") +
tm_shape(PA_shp[1, ]) + tm_polygons(border.col = "red")
tm_shape(shp = Borneo_shp) + tm_polygons(border.col = "deepskyblue4") +
tm_shape(PA_shp[,1]) + tm_polygons(border.col = "black") +
tm_shape(PA_shp[1, ]) + tm_polygons(border.col = "red")
Borneo_shp
st_area(x = Borneo_shp)
Borneo_shp_moll <-  st_transform(Borneo_shp, c("+proj=moll +datum=WGS84"))
Borneo_shp_moll
st_crs("+proj=moll +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs")
tmap_mode(mode = "plot")
tm_shape(shp = Borneo_shp_moll) + tm_polygons(border.col = "blue") #do you see the difference?
tm_shape(shp = Borneo_shp_moll) + tm_polygons(border.col = "blue")
st_area(x = Borneo_shp_moll) # units?
st_area(x = Borneo_shp_moll)
st_area(x = Borneo_shp)
Borneo_shp_moll
sp_shp <- st_read(dsn = paste(recs_wd, 'FCsim.shp', sep = '/'))
sp_shp
tm_shape(sp_shp) + tm_dots()
st_crs(sp_shp) <- 4326
st_crs(sp_shp)
sp_shp
pt_file <- paste(recs_wd, 'MyNewSpecies.csv', sep = '/')
pt_file <- paste(recs_wd, 'MyNewSpecies.csv', sep = '/')
sp_recs <- read.table(file = pt_file, header = TRUE, sep = ',')
class(x = sp_recs)
head(x = sp_recs)
plot(x = as(Borneo_shp, "Spatial"), col = 'grey', border = 'white')
points(x = sp_recs$long, sp_recs$lat, cex = 0.5, pch = 15)
plot(x = as(Borneo_shp, "Spatial"), col = 'grey', border = 'white')
points(x = sp_recs$long, sp_recs$lat, cex = 0.5, pch = 15)
plot(x = as(sp_shp, "Spatial"), col = 'blue', add = T)
sp_recs_sf <- st_as_sf(x = data.frame(sp_recs),
coords = c("long", "lat"),
crs = 4326,
sf_column_name = "geometry" )
sp_recs_sf
insidePA <- st_intersection(x = sp_recs_sf, y = PA_shp)
insidePA
mean_t <- extract(x = ras1, y = sp_recs_sf)
mean_t
sp_recs_sf$mean_t <- mean_t
mean(x = sp_recs_sf$mean_t)
hist(sp_recs@data$mean_t)
hist(sp_recs$mean_t)
hist(data.frame(sp_recs)$mean_t)
str(sp_recs_sf)
hist(table(sp_recs_sf$mean_t))
st_write(obj = insidePA,
dsn = output_wd,
layer = 'inPA',
driver ='ESRI Shapefile',
update = TRUE,
delete_layer = TRUE)
st_drivers()
insidePA <- st_intersection(x = sp_recs_sf, y = PA_shp)
insidePA <- st_intersection(x = sp_recs_sf, y = PA_shp)
mean_t <- extract(x = ras1, y = sp_recs_sf)
plot(insidePA[,1])
insidePA <- st_intersection(x = sp_recs_sf, y = PA_shp)
# retrieve the geometry (location) indices of PA_shp at
# the locations of sp_recs: which points are in PA_shp
insidePA <- st_intersection(x = sp_recs_sf, y = PA_shp)
# retrieve the geometry (location) indices of PA_shp at
# the locations of sp_recs: which points are in PA_shp
insidePA <- st_intersection(x = sp_recs_sf, y = PA_shp)
plot(insidePA)
insidePA <- st_intersection(x = sp_recs_sf, y = PA_shp)
library(raster)
library(sf)
library(sp)
library(ggplot2)
wb_data <- read.csv(file = "E:/PopDynIZW Dropbox/Teaching/_TU_BiodivDynamics2020/Day1_RIntro_SKS/data_wb_melden_utf8_clean_MW.csv")
head(wb_data)
wb_sf <- st_as_sf(x = wb_data , crs = 4326, coords = c("gps_y", "gps_x") )
wb_sf
wb_sf <- st_as_sf(x = wb_data , crs = 4326, coords = c("gps_y", "gps_x"), sf_column_name = "geometry")
wb_sf
raster_tc <- raster(x = "E:/PopDynIZW Dropbox/Teaching/_TU_BiodivDynamics2020/DataBerlin/Raster_future/future_tree_cover_density_2012_100m_3035.tif")
raster_tc
wb_sf
raster_tc
wb_sf
head(wb_data)
raster_tc
raster_tc <- raster(x = "E:/PopDynIZW Dropbox/Teaching/_TU_BiodivDynamics2020/DataBerlin/Raster_future/future_tree_cover_density_2012_100m_3035.asc")
raster_tc <- raster(x = "E:/PopDynIZW Dropbox/Teaching/_TU_BiodivDynamics2020/DataBerlin/Raster_future/future_tree_cover_density_2012_100m_3035.tif")
raster_tc <- raster(x = "E:/PopDynIZW Dropbox/Teaching/_TU_BiodivDynamics2020/DataBerlin/Raster_ascii/tree_cover_density_2012_100m_3035.asc")
raster_tc
st_crs(3035)[1]
st_crs(3035)[2]
crs(raster_tc) <- as.character(st_crs(3035)[2])
raster_tc
st_crs(3035)
raster_tc@crs <- CRS("+init=epsg:3035")
raster_temp <- raster(x = "E:/PopDynIZW Dropbox/Teaching/_TU_BiodivDynamics2020/DataBerlin/Raster_ascii/summer_temp_100m_3035.asc",
crs = as.character(st_crs(3035)[2]))
raster_temp
plot(raster_tc)
plot(raster_temp)
wb_sf_3035 <- st_transform(wb_sf, 3035)
plot(raster_tc)
plot(wb_sf_3035[,1], add = T)
tmap_mode("view")
tm_shape(raster_tc) + tm_raster(style = "pretty") +
tm_shape(wb_sf_3035) + tm_dots()
tm_shape(raster_tc) + tm_raster(style = "pretty", legend.show = F) +
tm_shape(wb_sf_3035) + tm_dots()
wb_sf_3035$temp<- extract(x = raster_temp, y = wb_sf_3035 , df = T, na.rm = T)
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather)
wb_sf_3035$temp
wb_sf_3035$temp <- extract(x = raster_temp, y = wb_sf_3035 , df = F, na.rm = T)
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather)
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather, xlab = "temp")
par(oma = c(3, 3, 0, 0))
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather, xlab = "temp")
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather, xlab = "temp")
par(oma = c(3, 3, 0, 0), mar = c(5,4,1,1))
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather, xlab = "temp")
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather, xlab = "weather")
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather, xlab = "weather")
par(oma = c(3, 3, 0, 0), mar = c(5,4,1,1))
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather, xlab = "weather")
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather, xlab = "weather", ylab = "temp")
par(oma = c(3, 3, 0, 0), mar = c(5,4,1,1))
boxplot(wb_sf_3035$temp ~ wb_sf_3035$weather, xlab = "weather", ylab = "temp")
plot(wb_sf_3035$temp ~ wb_sf_3035$weather)
plot(wb_sf_3035$temp ~ wb_sf_3035$weather)
points(wb_sf_3035$temp ~ wb_sf_3035$weather)
par(oma = c(3, 3, 0, 0), mar = c(5,4,1,1))
boxplot(wb_sf_3035$temp[wb_sf_3035$weather == "sonnig"] ~ wb_sf_3035$n_piglets[wb_sf_3035$weather == "sonnig"],
xlab = "weather", ylab = "temp")
boxplot(wb_sf_3035$temp[wb_sf_3035$weather == "sonnig"] ~ wb_sf_3035$n_piglets[wb_sf_3035$weather == "sonnig"],
xlab = "piglets", ylab = "temp")
plot(wb_sf_3035$temp ~ as.factor(wb_sf_3035$n_piglets))
points(wb_sf_3035$temp ~ as.factor(wb_sf_3035$n_piglets))
wb_sf_3035$tc <- extract(x = raster_tc,
y = wb_sf_3035,
buffer = 100,
fun = mean)
ggplot(wb_sf_3035, aes(x = group_size, y = tc)) +
geom_violin()
ggplot(wb_sf_3035, aes(x = as.factor(group_size), y = tc)) +
geom_violin()
ggplot(wb_sf_3035, aes(x = as.factor(group_size), y = tc)) +
geom_violin()+
geom_jitter(height = 0, width = 0.1) +
theme_light()
plot(wb_sf_3035$tc ~ as.factor(wb_sf_3035$group_size))
points(wb_sf_3035$tc ~ as.factor(wb_sf_3035$group_size))
ggplot(wb_sf_3035, aes(x = as.factor(group_size), y = tc)) +
geom_boxplot()+
geom_jitter(height = 0, width = 0.1) +
theme_light()
