
moths.ln <- fitsad(x=moths, sad="lnorm") #log-normal distribution
# get rank abundance objects
moths.ge.rad <- radpred(moths.ge)
moths.ls.rad <- radpred(moths.ls)
moths.ln.rad <- radpred(moths.ln)
# Plot the curves
plot(moths.ln.rad)
plot(moths.ln.rad, xlab = "Rank", ylab = "Abundance", log = "y",
type = "l", col = "green", lty = 1, lwd = 6)
# We can superimpose the curve to the rank plot
plot(moths.rad)
lines(moths.ge.rad, col="red")
lines(moths.ls.rad, col="blue")
lines(moths.ln.rad, col="green")
legend("topright",c("Geometric", "Logseries", "lognormal"),lty=1, col=c("red", "blue", "green"))
## looking at the fits
logLik(moths.ge)
logLik(moths.ls)
logLik(moths.ln)
birds1 <- data.frame(Species = c('BlueTit', 'Robin', 'Magpie',
'GreatTit'),
Abundance = rep(9, 4))
birds1
## now let us get the pi, ln(pi), N and S to calculate Shannon index
N <- sum(birds1$Abundance)
S <- nrow(birds1)
pi <- birds1$Abundance/N
lnpi <- log(pi)
H <- -sum(pi*lnpi)
H
# 1. transpose the data
birds1.transpose <- as.data.frame(t(birds1[, -1]))
colnames(birds1.transpose) <- birds1$Species
birds1.transpose
# Get diversity value
?diversity
H_vegan <- diversity(birds1.transpose, index = "shannon")
H_vegan
# We create a second community with no species in common with the first one
birds2 <- data.frame(Species = c('Sparrow', 'Dove', 'Crow'),
Abundance = c(4,5,20))
birds2
# the transpose matrix for the analysis
birds2.transpose <- as.data.frame(t(birds2[, -1]))
colnames(birds2.transpose) <- birds2$Species
birds2.transpose
# Both communities in the same table
# transpose data and get sums
birds.both <- merge(birds1, birds2, by = 'Species', all = T)
birds.both$Abundance.x[is.na(birds.both$Abundance.x)] <- 0
birds.both$Abundance.y[is.na(birds.both$Abundance.y)] <- 0
birds.both
birds.all <- rowSums(birds.both[,2:3])
birds.all
both.trans <- as.data.frame(t(birds.both[, -1]))
colnames(both.trans) <- birds.both$Species
rownames(both.trans) <- c("birds1", "birds2")
both.trans
all.trans <- colSums(both.trans)
# shannon diversity for each sample and for the sum
H1 <- diversity(both.trans, index = "shannon")
H2 <- diversity(all.trans, index = "shannon")
H1
H2
# Hill number order 1 (library iNEXT)
HN1.birds1 <- iNEXT(birds1$Abundance)
HN1.birds1$AsyEst
HN1.birds2 <- iNEXT(birds2$Abundance)
HN1.birds2$AsyEst
HN1.birdsboth <- iNEXT(birds.all)
HN1.birdsboth$AsyEst
data(spider)
str(spider)
example1 <- iNEXT(spider, q = 0, datatype = "abundance")
example1$DataInfo
#Show a summary of the data with diversity estimates in rarefied and extrapolated samples
example1$iNextEst
# show asymptotic estimates
example1$AsyEst
# We define the number of samples size that we want to use for estimation
m <- c(1, 50, 100, 200, 400)
example2 <- iNEXT(spider, q = c(0,1,2), datatype = "abundance", size = m)
example2$iNextEst
ggiNEXT(example1, type=1) # Curve for sample size
ggiNEXT(example2, type=1, facet.var="site")
ggiNEXT(example2, type=1, facet.var="order")
?ggiNEXT
example2
ggiNEXT(example2, type=1, facet.var="Assemblage")
ggiNEXT(example2, type=1, facet.var="Both")
# adding grey=TRUE, we get a plot in black and white theme
ggiNEXT(example1, type=3) # Curve for sample size
inext_spiders <- iNEXT(spider, q = 0, datatype = "abundance")
info_spiders <- inext_spiders$DataInfo
max(info_spiders$n)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.95)
estINEXTsize
max(info_spiders$SC)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "coverage", level = .945,
conf = 0.95)
estINEXTsize
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = NULL) # Remove the confidence intervals
# Bird data
bird_data <- read.csv(here("data","data_berlin","animal_data",
"Birds_Berlin_exercise_planillo2021.csv") )
max(info_spiders$SC)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "coverage", level = .945,
conf = 0.95)
estINEXTsize
library(here)
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = NULL) # Remove the confidence intervals
ggiNEXT(example1, type=3) # Curve for sample size
inext_spiders <- iNEXT(spider, q = 0, datatype = "abundance")
info_spiders <- inext_spiders$DataInfo
max(info_spiders$n)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.95)
estINEXTsize
max(info_spiders$SC)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "coverage", level = .945,
conf = 0.95)
estINEXTsize
inext_spiders <- iNEXT(spider, q = 0, datatype = "abundance")
info_spiders <- inext_spiders$DataInfo
max(info_spiders$n)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.95)
estINEXTsize
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = NULL) # Remove the confidence intervals
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = NULL) # Remove the confidence intervals
estINEXTsize
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = .252,
conf = NULL) # Remove the confidence intervals
?estimateD
max(info_spiders$SC)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "coverage", level = .945,
conf = 0.95)
estINEXTsize
inext_spiders <- iNEXT(spider, q = 0, datatype = "abundance")
info_spiders <- inext_spiders$DataInfo
max(info_spiders$n)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.95)
estINEXTsize
inext_spiders <- iNEXT(spider, q = 0, datatype = "abundance")
info_spiders <- inext_spiders$DataInfo
max(info_spiders$n)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.95)
estINEXTsize
max(info_spiders$SC)
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "coverage", level = .945,
conf = 0.95)
estINEXTsize
estINEXTcover2 <- estimateD(x = spider, datatype = "abundance", base = "size", level = 252,
conf = NULL) # Remove the confidence intervals
estINEXTcover2 <- estimateD(x = spider, datatype = "abundance", base = "size", level = 252,conf = NULL) # Remove the confidence intervals
estINEXTcover2 <- estimateD(x = spider, datatype = "abundance", base = "size", level = 252, conf = 0.95) # Remove the confidence intervals
habitat <- factor(c("Girdled", "Logged"))
plot(estINEXTcover2$'q = 0' ~ habitat, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
estINEXTcover2 <- estimateD(x = spider, datatype = "abundance", base = "size", level = 252, conf = NULL) # Remove the confidence intervals
estINEXTcover2 <- estimateD(x = spider, datatype = "abundance", base = "size", level = 252 )#, conf = NULL) # Remove the confidence intervals
habitat <- factor(c("Girdled", "Logged"))
plot(estINEXTcover2$'q = 0' ~ habitat, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
estINEXTsize <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.95)
estINEXTsize
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = NULL)
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.95)
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.0)
estINEXTcover2 <- estimateD(x = spider, datatype = "abundance", base = "size", level = 252, conf = NULL)
#estINEXTcover2 <- estimateD(x = spider, datatype = "abundance", base = "size", level = 252, conf = NULL) #this does not work any more
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.0)# Remove the confidence intervals
habitat <- factor(c("Girdled", "Logged"))
plot(estINEXTcover2$'q = 0' ~ habitat, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
estINEXTcover2
estINEXTcover2 <- estimateD(x = spider, datatype = "abundance", base = "size", level = 252, conf = NULL) #this does not work any more
estINEXTcover2 <- estimateD(spider, datatype = "abundance", base = "size", level = 252,
conf = 0.0)# Remove the confidence intervals
habitat <- factor(c("Girdled", "Logged"))
plot(estINEXTcover2$'Order.q = 0' ~ habitat, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
estINEXTcover2$Order.q
plot(estINEXTcover2[estINEXTcover$Order.q == 0] ~ habitat, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
plot(estINEXTcover2[estINEXTcover2$Order.q == 0] ~ habitat, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
estINEXTcover2$Order.q == 0
mysub <- subset(estINEXTcover2,estINEXTcover2$Order.q == 0 )
mysub
plot(estINEXTcover2[estINEXTcover2$Order.q == 0] ~ Assemblage, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
plot(estINEXTcover2[estINEXTcover2$Order.q == 0] ~ habitat, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
mysub <- subset(estINEXTcover2,estINEXTcover2$Order.q == 0 )
plot(mysub ~ habitat, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
plot(mysub$SC ~ habitat, col = c("green4", "red"),
xlab = "Habitats", ylab = "Est. Species richness")
mysub
# Bird data
bird_data <- read.csv(here("data","data_berlin","animal_data",
"Birds_Berlin_exercise_planillo2021.csv") )
head(bird_data)
str(bird_data)
summary(bird_data)
bird_data
# get the data in the proper format
bird_data <- column_to_rownames(bird_data, "site")
bird_data <- t(bird_data)
# run inext function
birds_inext <- iNEXT(bird_data, q = 0, datatype = "abundance") # q = 0 -> species richness
#Show a summary of the data
birds_inext$DataInfo
#Show a summary of the data with diversity estimates in rarefied and extrapolated samples
head(birds_inext$iNextEst)
# show asymptotic estimates
birds_inext$AsyEst
# Species accumulation curves
ggiNEXT(birds_inext, type=1, facet.var="none") # not all plots sampled equally
?ggiNEXT
# Species accumulation curves
ggiNEXT(birds_inext, type=1, facet.var="None") # not all plots sampled equally
# get minimum number of individuals from data
min_abund <- min(birds_inext$DataInfo$n)
# use 2x minimum number of individuals for rarefaction/extrapolation
birds_estINEXTsize <- estimateD(bird_data, datatype = "abundance", base = "size", level = (min_abund*2),
conf = NULL)
birds_estINEXTsize
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center', fig.width = 6, fig.height = 6)
library(knitr)
library(vegan)
library(iNEXT)
library(sads)
library(tidyverse)
library(terra)
library(here)
envir   <- read.csv(here('data','data_berlin','animal_data','transects_allenvir_100m.csv'))
# Export dataframe of species abundance and environmental variables for each site
species <- read.csv(here('data','data_berlin','animal_data','birds_berlin_exercise_planillo2021.csv'))
envir   <- read.csv(here('data','data_berlin','animal_data','transects_allenvir_100m.csv'))
library(knitr)
library(vegan)
library(iNEXT)
library(BAT)
library(psych)
library(dplyr)
library(ggplot2)
library(terra)
library(here)
birds <- read.csv(here("data","data_berlin","animal_data",
"birds_berlin_exercise_planillo2021.csv") )
## look at the data
ncol(birds)
head(birds)
str(birds)
sites <- birds$site
birds.data <- birds[,-71] # remove site from data
rownames(birds.data) <- birds$site
str(birds.data)
envir <- read.csv(here("data","data_berlin","animal_data","birds_transects_allenvir_100m.csv"))
head(envir)
str(envir)
envir <- read.csv(here("data","data_berlin","animal_data","birds_transects_allenvir_100m.csv"))
